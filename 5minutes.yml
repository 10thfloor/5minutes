---
- name: First 5 minutes in new servers
  hosts: webservers
  become: yes

  vars:
    server_user_name: trinity
    logwatch_email: devops@example.com
    user_public_keys:
      - ~/.ssh/id_rsa.pub

    required_packages:
      - ufw
      - fail2ban
      - unattended-upgrades
      - logwatch

    ufw_allowed_ports:
      - 22
      - 80
      - 443

  tasks:
    - name: Update APT package cache
      apt: update_cache=yes

    - name: Perform aptitude safe-upgrade
      apt: upgrade=yes

    - name: Add new user with sudo permission
      user: name={{ server_user_name }} shell=/bin/bash group=sudo

    - name: Add authorized_keys for the user
      authorized_key: user={{ server_user_name }} key="{{ lookup('file', item) }}"
      with_items:
        - "{{ user_public_keys }}"

    - name: Disallow root SSH access
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
      notify: Restart sshd

    - name: Disallow password authentication
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
      notify: Restart sshd

    - name: Install required packages
      apt: state=installed pkg={{ item }}
      with_items: 
      - "{{ required_packages }}"

    # Allow only ssh and http(s) ports
    - name: Allow ssh and http(s) connections
      ufw: rule=allow port={{ item }}
      with_items:
        - "{{ ufw_allowed_ports }}"

    - name: Enable ufw/firewall
      ufw: state=enabled policy=deny


    - name: Set up Postfix to relay mail
      debconf: name=postfix
               question='{{ item.question }}'
               value='{{ item.value }}'
               vtype='{{ item.vtype }}'
      with_items:
        - { question: 'postfix/mailname', value: '{{ ansible_fqdn }}', vtype: 'string' }
        - { question: 'postfix/main_mailer_type', value: 'Internet Site', vtype: 'string' }

    - name: Email logwatch summary daily
      lineinfile: dest=/etc/cron.daily/00logwatch
                  regexp="^/usr/sbin/logwatch"
                  line="/usr/sbin/logwatch --output mail --mailto {{ logwatch_email }} --detail high"
                  state=present create=yes
  handlers:
    - name: Restart sshd
      service: name=sshd state=restarted
